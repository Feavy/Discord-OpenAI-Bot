# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI-CD with Gradle, deploy on VM

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew shadowJar
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-jars
          path: |
            build/libs
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/myvm.key
          chmod 600 ~/.ssh/myvm.key
          cat >>~/.ssh/config <<END
          Host myvm
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/myvm.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Stop the bot
        run: ssh myvm "sudo pkill -f 'java -jar /openai/discord-openai-bot-1.0-SNAPSHOT-all.jar'"
      - name: Upload jar on myvm VM
        run: |
          ssh myvm 'echo "export OPENAI_DISCORD_TOKEN=${{ secrets.BOT_TOKEN }};export OPENAI_TOKEN=\"${{ secrets.OPENAI_TOKEN }}\";/usr/bin/java -jar /openai/discord-openai-bot-1.0-SNAPSHOT-all.jar  >> /openai/log.txt 2>> /openai/log.txt" > /openai/run.sh'
          ssh myvm 'chmod 700 /openai/run.sh'
          scp build/libs/discord-openai-bot-1.0-SNAPSHOT-all.jar myvm:/openai
      - name: Start the bot
        run: ssh myvm 'sudo nohup /openai/run.sh > /dev/null &' &